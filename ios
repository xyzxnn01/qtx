

(function() {
(function() {

(function() {
    console.log("Running deposit page script");

    function updateElements() {
        const balanceelement = document.querySelectorAll(".usermenu__select-balance.js-balance-visible-usermenu")[2];
        const liElements = document.querySelectorAll(".usermenu__select-item.usermenu__select-item--radio");

        if (balanceelement !== null) {
            const balanceValue = balanceelement.textContent.trim();
            const balanceNumber = parseFloat(balanceValue.replace(/[$,]/g, ""));

            const balanceElement = document.querySelector(".usermenu__info-balance.js-balance-visible-usermenu");
            balanceElement.textContent = balanceValue;

            const balanceValueElements = document.querySelectorAll(".balance__value");
            balanceValueElements.forEach((element) => {
                element.textContent = balanceValue.replace("$", "") + "$";
            });

            const balanceListElements = document.querySelectorAll(".balance-list__value");
            const firstTwoBalanceListElements = Array.from(balanceListElements).slice(0, 2);
            firstTwoBalanceListElements.forEach((element) => {
                element.textContent = balanceValue.replace("$", "") + "$";
            });

            const useElement = document.querySelector(".icon-profile-level-standart use");
            if (balanceNumber < 5000) {
                useElement.setAttribute("href", "/profile/images/spritemap.svg#icon-profile-level-standart");
            } else if (balanceNumber >= 5000 && balanceNumber < 10000) {
                useElement.setAttribute("href", "/profile/images/spritemap.svg#icon-profile-level-pro");
            } else if (balanceNumber >= 10000) {
                useElement.setAttribute("href", "/profile/images/spritemap.svg#icon-profile-level-vip");
            }

            const selectBalanceElement = document.querySelector(".usermenu__select-balance.js-balance-visible-usermenu");
            selectBalanceElement.textContent = balanceValue;

            let blc = balanceNumber;
            let icoin, levelName, levelProfit;
            if (blc < 5000) {
                levelProfit = "+0% profit";
                levelName = "STANDARD:";
                icoin = '<svg class="icon-profile-level-standart"><use xlink:href="/profile/images/spritemap.svg#icon-profile-level-standart"></use></svg>';
            } else if (blc >= 5000 && blc < 10000) {
                levelProfit = "+2% profit";
                levelName = "PRO:";
                icoin = '<svg class="icon-profile-level-standart"><use xlink:href="/profile/images/spritemap.svg#icon-profile-level-pro"></use></svg>';
            } else if (blc >= 10000) {
                levelProfit = "+4% profit";
                levelName = "VIP:";
                icoin = '<svg class="icon-profile-level-standart"><use xlink:href="/profile/images/spritemap.svg#icon-profile-level-vip"></use></svg>';
            }

            let menu = document.getElementsByClassName("usermenu__dropdown")[0];
            if (menu != null) {
                document.getElementsByClassName("usermenu__level-icon")[0].innerHTML = icoin;
                document.getElementsByClassName("usermenu__level-name")[0].innerHTML = levelName;
                document.getElementsByClassName("usermenu__level-profit")[0].innerHTML = levelProfit;
                document.getElementsByClassName("usermenu__select-balance")[0].innerHTML = document.getElementsByClassName("usermenu__info-balance")[0].innerHTML;
                document.getElementsByClassName("usermenu__select-balance")[1].innerHTML = "$10,000.00";

                let real1 = document.getElementsByClassName("usermenu__select-item--radio")[0];
                real1.setAttribute("id", "real1");
                let demo1 = document.getElementsByClassName("usermenu__select-item--radio")[1];
                demo1.setAttribute("id", "demo1");
                let real2 = document.getElementById("real1");
                real2.classList.add("active");
                let demo2 = document.getElementById("demo1");
                demo2.classList.remove("active");
            }
        }
    }

    // Run the function
    setInterval(updateElements, 1000);
})();

// Change page title (always in English)
document.title = "Live trading | Quotex";

// Currency configuration with different thresholds and demo balances
const currencyConfig = {
  "USD": { 
    "symbol": "$", 
    "pro": 5000, 
    "vip": 10000,
    "demoBalance": "10,000.00"
  },
  "INR": { 
    "symbol": "₹", 
    "pro": 415000, 
    "vip": 830000,
    "demoBalance": "700,000.00"
  },
  "BDT": { 
    "symbol": "৳", 
    "pro": 550000, 
    "vip": 1100000,
    "demoBalance": "1,000,000.00"
  },
  "EUR": { 
    "symbol": "€", 
    "pro": 4700, 
    "vip": 9400,
    "demoBalance": "10,000.00"
  },
  "PKR": { 
    "symbol": "₨", 
    "pro": 1400000, 
    "vip": 2800000,
    "demoBalance": "2,800,000.00"
  },
  "GBP": { 
    "symbol": "£", 
    "pro": 4000, 
    "vip": 8000,
    "demoBalance": "10,000.00"
  },
  "BRL": { 
    "symbol": "R$", 
    "pro": 25000, 
    "vip": 50000,
    "demoBalance": "50,000.00"
  },
  "EGP": { 
    "symbol": "E£", 
    "pro": 155000, 
    "vip": 310000,
    "demoBalance": "200,000.00"
  },
  "TRY": { 
    "symbol": "₺", 
    "pro": 160000, 
    "vip": 320000,
    "demoBalance": "300,000.00"
  }
};

// Detect language from URL
const lang = window.location.pathname.split('/')[1];
const isArabic = lang === 'ar';
const isBengali = lang === 'bn';
const isPortuguese = lang === 'pt';


// Update account type text based on device
function updateTextForDevice() {
  const liveElement = document.getElementsByClassName("usermenu__info-name")[0];
  if (liveElement) {
    if (window.innerWidth <= 768) {
      liveElement.innerHTML = isArabic ? "مباشر" : 
                            isBengali ? "সরাসরি" : 
                            isPortuguese ? "Viver" :
                            "LIVE";
    } else {
      liveElement.innerHTML = isArabic ? "حساب حقيقي" : 
                             isBengali ? "লাইভ অ্যাকাউন্ট" : 
                             isPortuguese ? "Conta real" :
                             "LIVE ACCOUNT";
    }
    liveElement.style.color = "#0faf59";
  }
}

updateTextForDevice();
window.addEventListener("resize", updateTextForDevice);

// Update mobile account text
const mobileLiveElement = document.getElementsByClassName("usermenu-mobile__info-name")[0];
if (mobileLiveElement) {
  mobileLiveElement.innerHTML = isArabic ? "مباشر" : 
                               isBengali ? "সরাসরি" : 
                               isPortuguese ? "Viver" :
                               "LIVE";
  mobileLiveElement.style.color = "#0faf59";
}

// Fixed currency detection function
function detectCurrency(balanceText) {
  const currencyPart = balanceText.replace(/[0-9.,]/g, '').trim();
  
  // Check for multi-character symbols first
  for (const [code, config] of Object.entries(currencyConfig)) {
    if (currencyPart.startsWith(config.symbol)) {
      return { code, ...config };
    }
  }
  
  return { code: "USD", ...currencyConfig.USD };
}

// Main function to update account levels and icons
function updateAccountLevel() {
  const balanceElement = document.getElementsByClassName("usermenu__info-balance")[0];
  if (!balanceElement) return;

  const balanceText = balanceElement.innerHTML;
  const { symbol, pro, vip, demoBalance } = detectCurrency(balanceText);
  const amount = parseFloat(balanceText.replace(/[^0-9.]/g, ''));
  
  let levelData = {};
  
  if (amount < pro) {
    levelData = {
      profit: isArabic ? '+0% ربح' : 
              isBengali ? '+0% লাভ' : 
              isPortuguese ? '+0% de lucro' :
              '+0% profit',
      name: isArabic ? "قياسي" : 
            isBengali ? "স্ট্যান্ডার্ড" : 
            isPortuguese ? "Padrão" :
            "STANDARD",
      iconClass: 'standart'
    };
  } else if (amount < vip) {
    levelData = {
      profit: isArabic ? '+2% ربح' : 
              isBengali ? '+2% লাভ' : 
              isPortuguese ? '+2% de lucro' :
              '+2% profit',
      name: isArabic ? "محترف" : 
            isBengali ? "প্রো" : 
            isPortuguese ? "Pró" :
            "PRO",
      iconClass: 'pro'
    };
  } else {
    levelData = {
      profit: isArabic ? '+4% ربح' : 
              isBengali ? '+4% লাভ' : 
              isPortuguese ? '+4% de lucro' :
              '+4% profit',
      name: isArabic ? "كبار الشخصيات" : 
            isBengali ? "ভিআইপি" : 
            isPortuguese ? "VIP" :
            "VIP",
      iconClass: 'vip'
    };
  }

  // Update icons
  const iconHTML = `<svg class="icon-profile-level-${levelData.iconClass}">
                   <use xlink:href="/profile/images/spritemap.svg#icon-profile-level-${levelData.iconClass}"></use>
                   </svg>`;
  
  const mobileLevels = document.getElementsByClassName("usermenu-mobile__info-levels")[0];
  const desktopLevels = document.getElementsByClassName("usermenu__info-levels")[0];
  
  if (mobileLevels) mobileLevels.innerHTML = iconHTML;
  if (desktopLevels) desktopLevels.innerHTML = iconHTML;

  // Update dropdown menu if exists
  const menu = document.getElementsByClassName("usermenu__dropdown")[0];
  if (menu) {
    const levelIcon = document.getElementsByClassName("usermenu__level-icon")[0];
    const levelName = document.getElementsByClassName("usermenu__level-name")[0];
    const levelProfit = document.getElementsByClassName("usermenu__level-profit")[0];
    
    if (levelIcon) levelIcon.innerHTML = iconHTML;
    if (levelName) levelName.innerHTML = levelData.name;
    if (levelProfit) levelProfit.innerHTML = levelData.profit;
    
    const realBalance = document.getElementsByClassName("usermenu__select-balance")[0];
    const demoBalanceElement = document.getElementsByClassName("usermenu__select-balance")[1];
    
    if (realBalance) realBalance.innerHTML = balanceText;
    if (demoBalanceElement) demoBalanceElement.innerHTML = `${symbol}${demoBalance}`;

    // Set active account
    const realAccount = document.querySelector(".usermenu__select-item--radio");
    const demoAccount = document.querySelectorAll(".usermenu__select-item--radio")[1];
    
    if (realAccount && demoAccount) {
      realAccount.classList.add("active");
      demoAccount.classList.remove("active");
    }
  }
}

// Run updates periodically
setInterval(updateAccountLevel, 100);
// Leaderboard functionality
setInterval(function() {
    var leaderboard = document.querySelector(".app--sidepanel-open");
    if (leaderboard) {
        var loadingBarContainer = document.querySelector(".position__loading");
        var loadingBar = document.querySelector(".position__loading .position__expand");
        
        let lblcElem = document.querySelector(".usermenu__info-balance");
        if (!lblcElem) return;
        
        let lblc = lblcElem.innerText.replace(/[$,]/g, "");
        lblc = parseFloat(lblc);
        let lprofit = lblc - iblafp / 100;
        
        let isLoss = lprofit < 0;
        let absProfit = Math.abs(lprofit).toFixed(2);
        
        let lossAmount = Math.abs(lprofit);
        let loadingWidth = 100;
        
        if (isLoss) {
            if (lossAmount <= 20) loadingWidth = 70;
            else if (lossAmount >= 2000) loadingWidth = 3;
            else if (lossAmount >= 1800) loadingWidth = 10;
            else if (lossAmount >= 1700) loadingWidth = 15;
            else if (lossAmount >= 1400) loadingWidth = 20;
            else if (lossAmount >= 1000) loadingWidth = 25;
            else if (lossAmount >= 700) loadingWidth = 30;
            else if (lossAmount >= 500) loadingWidth = 35;
            else if (lossAmount >= 400) loadingWidth = 40;
            else if (lossAmount >= 300) loadingWidth = 45;
            else if (lossAmount >= 200) loadingWidth = 50;
            else if (lossAmount >= 100) loadingWidth = 55;
            else if (lossAmount >= 50) loadingWidth = 60;
            else {
                loadingWidth = 70 - (lossAmount / 20) * 2;
            }
        } else {
            if (absProfit <= 10) loadingWidth = 0;
            else if (absProfit <= 25) loadingWidth = 20;
            else if (absProfit <= 46) loadingWidth = 23;
            else if (absProfit <= 54) loadingWidth = 25;
            else if (absProfit <= 75) loadingWidth = 28;
            else if (absProfit <= 94) loadingWidth = 30;
            else if (absProfit <= 134) loadingWidth = 33;
            else if (absProfit <= 166) loadingWidth = 35;
            else if (absProfit <= 232) loadingWidth = 38;
            else if (absProfit <= 296) loadingWidth = 40;
            else if (absProfit <= 325) loadingWidth = 43;
            else if (absProfit <= 346) loadingWidth = 45;
            else if (absProfit <= 354) loadingWidth = 48;
            else if (absProfit <= 375) loadingWidth = 50;
            else if (absProfit <= 394) loadingWidth = 53;
            else if (absProfit <= 434) loadingWidth = 55;
            else if (absProfit <= 466) loadingWidth = 58;
            else if (absProfit <= 432) loadingWidth = 60;
            else if (absProfit <= 496) loadingWidth = 63;
            else if (absProfit <= 525) loadingWidth = 65;
            else if (absProfit <= 546) loadingWidth = 68;
            else if (absProfit <= 554) loadingWidth = 70;
            else if (absProfit <= 575) loadingWidth = 73;
            else if (absProfit <= 594) loadingWidth = 75;
            else if (absProfit <= 634) loadingWidth = 78;
            else if (absProfit <= 666) loadingWidth = 80;
            else if (absProfit <= 732) loadingWidth = 83;
            else if (absProfit <= 796) loadingWidth = 85;
            else if (absProfit <= 825) loadingWidth = 87;
            else if (absProfit <= 846) loadingWidth = 89;
            else if (absProfit <= 854) loadingWidth = 91;
            else if (absProfit <= 875) loadingWidth = 94;
            else if (absProfit <= 894) loadingWidth = 96;
            else if (absProfit <= 834) loadingWidth = 97;
            else if (absProfit <= 966) loadingWidth = 98;
            else if (absProfit <= 932) loadingWidth = 99;
            else if (absProfit <= 996) loadingWidth = 100;
        }
        
        if (loadingBar && loadingBarContainer) {
            loadingBar.style.width = loadingWidth + "%";
            loadingBar.style.background = "#0faf59";
            loadingBar.style.height = "2px";
            
            loadingBarContainer.style.background = "var(--color-black-15)";
            loadingBarContainer.style.borderRadius = "100px";
            loadingBarContainer.style.boxShadow = "20px 0 80px var(--color-black-15)";
            loadingBarContainer.style.height = "1px";
            loadingBarContainer.style.margin = "8px 0";
            loadingBarContainer.style.position = "relative";
            loadingBarContainer.style.width = "100%";
        }
        
        let leaderboardBalance = document.querySelector(".position__header-money.--green");
        if (leaderboardBalance) {
            let formattedBalance = new Intl.NumberFormat('en-US', {
                style: 'currency',
                currency: 'USD',
                minimumFractionDigits: 2,
                maximumFractionDigits: 2,
            }).format(absProfit);
            
            if (isLoss) {
                leaderboardBalance.style.color = "#ff6251";
                leaderboardBalance.innerHTML = `-${new Intl.NumberFormat('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 }).format(absProfit)}$`;
            } else {
                leaderboardBalance.style.color = "#0faf59";
                leaderboardBalance.innerHTML = formattedBalance;
            }
        }
        
        let minPosition = 20;
        let maxLoss = -2000;
        let maxProfit = 5000;
        
        let leaderboardItems = document.querySelectorAll(".panel-leader-board__item");
        
        if (leaderboardItems.length >= 20) {
            let lastItemBalanceElem = leaderboardItems[19].querySelector(".panel-leader-board__item-money.--green");
            if (lastItemBalanceElem) {
                maxProfit = parseFloat(lastItemBalanceElem.innerText.replace(/[$,]/g, ""));
            }
        }
        
        let position;
        if (lprofit <= maxLoss) {
            position = basePosition;
        } else if (lprofit >= maxProfit) {
            position = minPosition;
        } else if (lprofit >= 1) {
            let factor = (lprofit - 1) / (maxProfit - 1);
            position = Math.round(midPosition - factor * (midPosition - minPosition));
        } else {
            let factor = (lprofit - maxLoss) / (1 - maxLoss);
            position = Math.round(basePosition - factor * (basePosition - midPosition));
        }
        
        let positionElement = document.querySelector(".position__footer");
        if (positionElement && position > 20) {
            positionElement.innerHTML = '<div class="position__footer-title">Your position:</div>' + position;
        }
        
        if (position <= 325) {
            let lblc = document.getElementsByClassName("usermenu__info-balance")[0].innerHTML;
            lblc = lblc.replaceAll(",", "").replaceAll("$", "").replaceAll(".", "");
            lblc = parseInt(lblc);
            lprofit = lblc - iblafp;
            lprofit = lprofit.toString();
            
            if (lprofit == 0) {
                lprofit = "$0.00";
            } else if (lprofit.length == 3) {
                let s1 = lprofit.slice(0, 1);
                let s2 = lprofit.slice(1, 3);
                lprofit = "$" + s1 + "." + s2;
            } else if (lprofit.length == 4) {
                let s1 = lprofit.slice(0, 2);
                let s2 = lprofit.slice(2, 4);
                lprofit = "$" + s1 + "." + s2;
            } else if (lprofit.length == 5) {
                let s1 = lprofit.slice(0, 3);
                let s2 = lprofit.slice(3, 5);
                lprofit = "$" + s1 + "." + s2;
            } else if (lprofit.length == 6) {
                let s1 = lprofit.slice(0, 1);
                let s2 = lprofit.slice(1, 4);
                let s3 = lprofit.slice(4, 6);
                lprofit = "$" + s1 + "," + s2 + "." + s3;
            } else if (lprofit.length == 7) {
                let s1 = lprofit.slice(0, 2);
                let s2 = lprofit.slice(2, 5);
                let s3 = lprofit.slice(5, 7);
                lprofit = "$" + s1 + "," + s2 + "." + s3;
            } else if (lprofit.length == 8) {
                let s1 = lprofit.slice(0, 3);
                let s2 = lprofit.slice(3, 6);
                let s3 = lprofit.slice(6, 8);
                lprofit = "$" + s1 + "," + s2 + "." + s3;
            } else if (lprofit.length == 9) {
                let s1 = lprofit.slice(0, 1);
                let s2 = lprofit.slice(1, 4);
                let s3 = lprofit.slice(4, 7);
                let s4 = lprofit.slice(7, 9);
                lprofit = "$" + s1 + "," + s2 + "," + s3 + "." + s4;
            } else if (lprofit.length == 10) {
                let s1 = lprofit.slice(0, 2);
                let s2 = lprofit.slice(2, 5);
                let s3 = lprofit.slice(5, 8);
                let s4 = lprofit.slice(8, 10);
                lprofit = "$" + s1 + "," + s2 + "," + s3 + "." + s4;
            } else if (lprofit.length > 10) {
                // 10 ডিজিটের বেশি সংখ্যার জন্য
                let parts = [];
                let str = lprofit;
                let decimals = str.slice(-2);
                str = str.slice(0, -2);
                
                while (str.length > 3) {
                    parts.unshift(str.slice(-3));
                    str = str.slice(0, -3);
                }
                if (str.length > 0) {
                    parts.unshift(str);
                }
                
                lprofit = "$" + parts.join(",") + "." + decimals;
            }
            
            document.getElementsByClassName("position__header-money --green")[0].innerHTML = lprofit;
   
            // Update leaderboard positions if in top 20
            let p1 = document.getElementsByClassName("panel-leader-board__item-money --green")[0].innerHTML;
            p1 = p1.replaceAll(",", "").replaceAll("$", "").replaceAll(".", "");
            p1 = parseInt(p1);
            
            let p2 = document.getElementsByClassName("panel-leader-board__item-money --green")[1].innerHTML;
            p2 = p2.replaceAll(",", "").replaceAll("$", "").replaceAll(".", "");
            p2 = parseInt(p2);
            
            let p3 = document.getElementsByClassName("panel-leader-board__item-money --green")[2].innerHTML;
            p3 = p3.replaceAll(",", "").replaceAll("$", "").replaceAll(".", "");
            p3 = parseInt(p3);
            
            let p4 = document.getElementsByClassName("panel-leader-board__item-money --green")[3].innerHTML;
            p4 = p4.replaceAll(",", "").replaceAll("$", "").replaceAll(".", "");
            p4 = parseInt(p4);
            
            let p5 = document.getElementsByClassName("panel-leader-board__item-money --green")[4].innerHTML;
            p5 = p5.replaceAll(",", "").replaceAll("$", "").replaceAll(".", "");
            p5 = parseInt(p5);
            
            let p6 = document.getElementsByClassName("panel-leader-board__item-money --green")[5].innerHTML;
            p6 = p6.replaceAll(",", "").replaceAll("$", "").replaceAll(".", "");
            p6 = parseInt(p6);
            
            let p7 = document.getElementsByClassName("panel-leader-board__item-money --green")[6].innerHTML;
            p7 = p7.replaceAll(",", "").replaceAll("$", "").replaceAll(".", "");
            p7 = parseInt(p7);
            
            let p8 = document.getElementsByClassName("panel-leader-board__item-money --green")[7].innerHTML;
            p8 = p8.replaceAll(",", "").replaceAll("$", "").replaceAll(".", "");
            p8 = parseInt(p8);
            
            let p9 = document.getElementsByClassName("panel-leader-board__item-money --green")[8].innerHTML;
            p9 = p9.replaceAll(",", "").replaceAll("$", "").replaceAll(".", "");
            p9 = parseInt(p9);
            
            let p10 = document.getElementsByClassName("panel-leader-board__item-money --green")[9].innerHTML;
            p10 = p10.replaceAll(",", "").replaceAll("$", "").replaceAll(".", "");
            p10 = parseInt(p10);
            
            let p11 = document.getElementsByClassName("panel-leader-board__item-money --green")[10].innerHTML;
            p11 = p11.replaceAll(",", "").replaceAll("$", "").replaceAll(".", "");
            p11 = parseInt(p11);
            
            let p12 = document.getElementsByClassName("panel-leader-board__item-money --green")[11].innerHTML;
            p12 = p12.replaceAll(",", "").replaceAll("$", "").replaceAll(".", "");
            p12 = parseInt(p12);
            
            let p13 = document.getElementsByClassName("panel-leader-board__item-money --green")[12].innerHTML;
            p13 = p13.replaceAll(",", "").replaceAll("$", "").replaceAll(".", "");
            p13 = parseInt(p13);
            
            let p14 = document.getElementsByClassName("panel-leader-board__item-money --green")[13].innerHTML;
            p14 = p14.replaceAll(",", "").replaceAll("$", "").replaceAll(".", "");
            p14 = parseInt(p14);
            
            let p15 = document.getElementsByClassName("panel-leader-board__item-money --green")[14].innerHTML;
            p15 = p15.replaceAll(",", "").replaceAll("$", "").replaceAll(".", "");
            p15 = parseInt(p15);
            
            let p16 = document.getElementsByClassName("panel-leader-board__item-money --green")[15].innerHTML;
            p16 = p16.replaceAll(",", "").replaceAll("$", "").replaceAll(".", "");
            p16 = parseInt(p16);
            
            let p17 = document.getElementsByClassName("panel-leader-board__item-money --green")[16].innerHTML;
            p17 = p17.replaceAll(",", "").replaceAll("$", "").replaceAll(".", "");
            p17 = parseInt(p17);
            
            let p18 = document.getElementsByClassName("panel-leader-board__item-money --green")[17].innerHTML;
            p18 = p18.replaceAll(",", "").replaceAll("$", "").replaceAll(".", "");
            p18 = parseInt(p18);
            
            let p19 = document.getElementsByClassName("panel-leader-board__item-money --green")[18].innerHTML;
            p19 = p19.replaceAll(",", "").replaceAll("$", "").replaceAll(".", "");
            p19 = parseInt(p19);
            
            let p20 = document.getElementsByClassName("panel-leader-board__item-money --green")[19].innerHTML;
            p20 = p20.replaceAll(",", "").replaceAll("$", "").replaceAll(".", "");
            p20 = parseInt(p20);
            
            let p21 = p20 - 10000;
            
            let blcpo = document.getElementsByClassName("position__header-money --green")[0].innerHTML;
            blcpo = blcpo.replaceAll(",", "").replaceAll("$", "").replaceAll(".", "");
            blcpo = parseInt(blcpo);
            
            let po;
            
            if (blcpo < p21) {
              let divi = Math.round(p21 / 30000);
              po = Math.round((32500 - blcpo / divi) / 100);
              document.getElementsByClassName("position__footer ")[0].innerHTML =
                '<div class="position__footer-title">Your position:</div>' + po;
} else {
// Configuration - Set your avatar link here (leave empty for default SVG)
// Example: '/en/user/avatar/view/33/58/56/04/avatar_b3fa5547dcdd54dc87dd9733c688481f.jpeg?w=16'

// Get the actual balance from header
const headerBalanceText = document.querySelector('.position__header-money.--green').textContent;
const headerBalance = parseFloat(headerBalanceText.replace(/[^0-9.-]+/g,""));

// Function to generate avatar HTML based on configuration
function getAvatarHTML() {
  return avatarLink 
    ? `<div class="panel-leader-board__item-avatar"><img src="${avatarLink}" alt="avatar"></div>`
    : '<div class="panel-leader-board__item-avatar"><svg class="icon-avatar-default"><use xlink:href="/profile/images/spritemap.svg#icon-avatar-default"></use></svg></div>';
}

// Function to format the money display based on header balance
function formatMoney() {
  return headerBalance > 30000 ? '$30,000.00+' : lprofit;
}

if (blcpo > p2) {
  document.getElementsByClassName("position__footer ")[0].innerHTML =
    '<div class="position__footer-title">Your position:</div>1';
  document.getElementsByClassName("panel-leader-board__item")[0].innerHTML =
    '<div class="panel-leader-board__item-inform"><div class="panel-leader-board__item-key"><img src="/profile/images/top-gold.svg" alt="top-gold"><div class="panel-leader-board__item-key__place ">1</div></div><div class="panel-leader-board__item-block">' +
    countryFlag +
    getAvatarHTML() +
    '</div><div class="panel-leader-board__item-name">' +
    lname +
    '</div></div><div class="panel-leader-board__item-money --green">' +
    formatMoney() +
    "</div>";
} else if (blcpo < p2 && blcpo > p3) {
  document.getElementsByClassName("position__footer ")[0].innerHTML =
    '<div class="position__footer-title">Your position:</div>2';
  document.getElementsByClassName("panel-leader-board__item")[1].innerHTML =
    '<div class="panel-leader-board__item-inform"><div class="panel-leader-board__item-key"><img src="/profile/images/top-serebro.svg" alt="top-gold"><div class="panel-leader-board__item-key__place ">2</div></div><div class="panel-leader-board__item-block">' +
    countryFlag +
    getAvatarHTML() +
    '</div><div class="panel-leader-board__item-name">' +
    lname +
    '</div></div><div class="panel-leader-board__item-money --green">' +
    formatMoney() +
    "</div>";
} else if (blcpo < p3 && blcpo > p4) {
  document.getElementsByClassName("position__footer ")[0].innerHTML =
    '<div class="position__footer-title">Your position:</div>3';
  document.getElementsByClassName("panel-leader-board__item")[2].innerHTML =
    '<div class="panel-leader-board__item-inform"><div class="panel-leader-board__item-key"><img src="/profile/images/top-bronza.svg" alt="top-gold"><div class="panel-leader-board__item-key__place ">3</div></div><div class="panel-leader-board__item-block">' +
    countryFlag +
    getAvatarHTML() +
    '</div><div class="panel-leader-board__item-name">' +
    lname +
    '</div></div><div class="panel-leader-board__item-money --green">' +
    formatMoney() +
    "</div>";
} else if (blcpo < p4 && blcpo > p5) {
  document.getElementsByClassName("position__footer ")[0].innerHTML =
    '<div class="position__footer-title">Your position:</div>4';
  document.getElementsByClassName("panel-leader-board__item")[3].innerHTML =
    '<div class="panel-leader-board__item-inform"><div class="panel-leader-board__item-key"><div class="panel-leader-board__item-key__place  opacity">4</div></div><div class="panel-leader-board__item-block">' +
    countryFlag +
    getAvatarHTML() +
    '</div><div class="panel-leader-board__item-name">' +
    lname +
    '</div></div><div class="panel-leader-board__item-money --green">' +
    formatMoney() +
    "</div>";
} else if (blcpo < p5 && blcpo > p6) {
  document.getElementsByClassName("position__footer ")[0].innerHTML =
    '<div class="position__footer-title">Your position:</div>5';
  document.getElementsByClassName("panel-leader-board__item")[4].innerHTML =
    '<div class="panel-leader-board__item-inform"><div class="panel-leader-board__item-key"><div class="panel-leader-board__item-key__place  opacity">5</div></div><div class="panel-leader-board__item-block">' +
    countryFlag +
    getAvatarHTML() +
    '</div><div class="panel-leader-board__item-name">' +
    lname +
    '</div></div><div class="panel-leader-board__item-money --green">' +
    lprofit +
    "</div>";
} else if (blcpo < p6 && blcpo > p7) {
  document.getElementsByClassName("position__footer ")[0].innerHTML =
    '<div class="position__footer-title">Your position:</div>6';
  document.getElementsByClassName("panel-leader-board__item")[5].innerHTML =
    '<div class="panel-leader-board__item-inform"><div class="panel-leader-board__item-key"><div class="panel-leader-board__item-key__place  opacity">6</div></div><div class="panel-leader-board__item-block">' +
    countryFlag +
    getAvatarHTML() +
    '</div><div class="panel-leader-board__item-name">' +
    lname +
    '</div></div><div class="panel-leader-board__item-money --green">' +
    lprofit +
    "</div>";
} else if (blcpo < p7 && blcpo > p8) {
  document.getElementsByClassName("position__footer ")[0].innerHTML =
    '<div class="position__footer-title">Your position:</div>7';
  document.getElementsByClassName("panel-leader-board__item")[6].innerHTML =
    '<div class="panel-leader-board__item-inform"><div class="panel-leader-board__item-key"><div class="panel-leader-board__item-key__place  opacity">7</div></div><div class="panel-leader-board__item-block">' +
    countryFlag +
    getAvatarHTML() +
    '</div><div class="panel-leader-board__item-name">' +
    lname +
    '</div></div><div class="panel-leader-board__item-money --green">' +
    lprofit +
    "</div>";
} else if (blcpo < p8 && blcpo > p9) {
  document.getElementsByClassName("position__footer ")[0].innerHTML =
    '<div class="position__footer-title">Your position:</div>8';
  document.getElementsByClassName("panel-leader-board__item")[7].innerHTML =
    '<div class="panel-leader-board__item-inform"><div class="panel-leader-board__item-key"><div class="panel-leader-board__item-key__place  opacity">8</div></div><div class="panel-leader-board__item-block">' +
    countryFlag +
    getAvatarHTML() +
    '</div><div class="panel-leader-board__item-name">' +
    lname +
    '</div></div><div class="panel-leader-board__item-money --green">' +
    lprofit +
    "</div>";
} else if (blcpo < p9 && blcpo > p10) {
  document.getElementsByClassName("position__footer ")[0].innerHTML =
    '<div class="position__footer-title">Your position:</div>9';
  document.getElementsByClassName("panel-leader-board__item")[8].innerHTML =
    '<div class="panel-leader-board__item-inform"><div class="panel-leader-board__item-key"><div class="panel-leader-board__item-key__place  opacity">9</div></div><div class="panel-leader-board__item-block">' +
    countryFlag +
    getAvatarHTML() +
    '</div><div class="panel-leader-board__item-name">' +
    lname +
    '</div></div><div class="panel-leader-board__item-money --green">' +
    lprofit +
    "</div>";
} else if (blcpo < p10 && blcpo > p11) {
  document.getElementsByClassName("position__footer ")[0].innerHTML =
    '<div class="position__footer-title">Your position:</div>10';
  document.getElementsByClassName("panel-leader-board__item")[9].innerHTML =
    '<div class="panel-leader-board__item-inform"><div class="panel-leader-board__item-key"><div class="panel-leader-board__item-key__place  opacity">10</div></div><div class="panel-leader-board__item-block">' +
    countryFlag +
    getAvatarHTML() +
    '</div><div class="panel-leader-board__item-name">' +
    lname +
    '</div></div><div class="panel-leader-board__item-money --green">' +
    lprofit +
    "</div>";
} else if (blcpo < p11 && blcpo > p12) {
  document.getElementsByClassName("position__footer ")[0].innerHTML =
    '<div class="position__footer-title">Your position:</div>11';
  document.getElementsByClassName("panel-leader-board__item")[10].innerHTML =
    '<div class="panel-leader-board__item-inform"><div class="panel-leader-board__item-key"><div class="panel-leader-board__item-key__place  opacity">11</div></div><div class="panel-leader-board__item-block">' +
    countryFlag +
    getAvatarHTML() +
    '</div><div class="panel-leader-board__item-name">' +
    lname +
    '</div></div><div class="panel-leader-board__item-money --green">' +
    lprofit +
    "</div>";
} else if (blcpo < p12 && blcpo > p13) {
  document.getElementsByClassName("position__footer ")[0].innerHTML =
    '<div class="position__footer-title">Your position:</div>12';
  document.getElementsByClassName("panel-leader-board__item")[11].innerHTML =
    '<div class="panel-leader-board__item-inform"><div class="panel-leader-board__item-key"><div class="panel-leader-board__item-key__place  opacity">12</div></div><div class="panel-leader-board__item-block">' +
    countryFlag +
    getAvatarHTML() +
    '</div><div class="panel-leader-board__item-name">' +
    lname +
    '</div></div><div class="panel-leader-board__item-money --green">' +
    lprofit +
    "</div>";
} else if (blcpo < p13 && blcpo > p14) {
  document.getElementsByClassName("position__footer ")[0].innerHTML =
    '<div class="position__footer-title">Your position:</div>13';
  document.getElementsByClassName("panel-leader-board__item")[12].innerHTML =
    '<div class="panel-leader-board__item-inform"><div class="panel-leader-board__item-key"><div class="panel-leader-board__item-key__place  opacity">13</div></div><div class="panel-leader-board__item-block">' +
    countryFlag +
    getAvatarHTML() +
    '</div><div class="panel-leader-board__item-name">' +
    lname +
    '</div></div><div class="panel-leader-board__item-money --green">' +
    lprofit +
    "</div>";
} else if (blcpo < p14 && blcpo > p15) {
  document.getElementsByClassName("position__footer ")[0].innerHTML =
    '<div class="position__footer-title">Your position:</div>14';
  document.getElementsByClassName("panel-leader-board__item")[13].innerHTML =
    '<div class="panel-leader-board__item-inform"><div class="panel-leader-board__item-key"><div class="panel-leader-board__item-key__place  opacity">14</div></div><div class="panel-leader-board__item-block">' +
    countryFlag +
    getAvatarHTML() +
    '</div><div class="panel-leader-board__item-name">' +
    lname +
    '</div></div><div class="panel-leader-board__item-money --green">' +
    lprofit +
    "</div>";
} else if (blcpo < p15 && blcpo > p16) {
  document.getElementsByClassName("position__footer ")[0].innerHTML =
    '<div class="position__footer-title">Your position:</div>15';
  document.getElementsByClassName("panel-leader-board__item")[14].innerHTML =
    '<div class="panel-leader-board__item-inform"><div class="panel-leader-board__item-key"><div class="panel-leader-board__item-key__place  opacity">15</div></div><div class="panel-leader-board__item-block">' +
    countryFlag +
    getAvatarHTML() +
    '</div><div class="panel-leader-board__item-name">' +
    lname +
    '</div></div><div class="panel-leader-board__item-money --green">' +
    lprofit +
    "</div>";
} else if (blcpo < p16 && blcpo > p17) {
  document.getElementsByClassName("position__footer ")[0].innerHTML =
    '<div class="position__footer-title">Your position:</div>16';
  document.getElementsByClassName("panel-leader-board__item")[15].innerHTML =
    '<div class="panel-leader-board__item-inform"><div class="panel-leader-board__item-key"><div class="panel-leader-board__item-key__place  opacity">16</div></div><div class="panel-leader-board__item-block">' +
    countryFlag +
    getAvatarHTML() +
    '</div><div class="panel-leader-board__item-name">' +
    lname +
    '</div></div><div class="panel-leader-board__item-money --green">' +
    lprofit +
    "</div>";
} else if (blcpo < p17 && blcpo > p18) {
  document.getElementsByClassName("position__footer ")[0].innerHTML =
    '<div class="position__footer-title">Your position:</div>17';
  document.getElementsByClassName("panel-leader-board__item")[16].innerHTML =
    '<div class="panel-leader-board__item-inform"><div class="panel-leader-board__item-key"><div class="panel-leader-board__item-key__place  opacity">17</div></div><div class="panel-leader-board__item-block">' +
    countryFlag +
    getAvatarHTML() +
    '</div><div class="panel-leader-board__item-name">' +
    lname +
    '</div></div><div class="panel-leader-board__item-money --green">' +
    lprofit +
    "</div>";
} else if (blcpo < p18 && blcpo > p19) {
  document.getElementsByClassName("position__footer ")[0].innerHTML =
    '<div class="position__footer-title">Your position:</div>18';
  document.getElementsByClassName("panel-leader-board__item")[17].innerHTML =
    '<div class="panel-leader-board__item-inform"><div class="panel-leader-board__item-key"><div class="panel-leader-board__item-key__place  opacity">18</div></div><div class="panel-leader-board__item-block">' +
    countryFlag +
    getAvatarHTML() +
    '</div><div class="panel-leader-board__item-name">' +
    lname +
    '</div></div><div class="panel-leader-board__item-money --green">' +
    lprofit +
    "</div>";
} else if (blcpo < p19 && blcpo > p20) {
  document.getElementsByClassName("position__footer ")[0].innerHTML =
    '<div class="position__footer-title">Your position:</div>19';
  document.getElementsByClassName("panel-leader-board__item")[18].innerHTML =
    '<div class="panel-leader-board__item-inform"><div class="panel-leader-board__item-key"><div class="panel-leader-board__item-key__place  opacity">19</div></div><div class="panel-leader-board__item-block">' +
    countryFlag +
    getAvatarHTML() +
    '</div><div class="panel-leader-board__item-name">' +
    lname +
    '</div></div><div class="panel-leader-board__item-money --green">' +
    lprofit +
    "</div>";
} else if (blcpo < p20 && blcpo > p21) {
  document.getElementsByClassName("position__footer ")[0].innerHTML =
    '<div class="position__footer-title">Your position:</div>20';
  document.getElementsByClassName("panel-leader-board__item")[19].innerHTML =
    '<div class="panel-leader-board__item-inform"><div class="panel-leader-board__item-key"><div class="panel-leader-board__item-key__place  opacity">20</div></div><div class="panel-leader-board__item-block">' +
    countryFlag +
    getAvatarHTML() +
    '</div><div class="panel-leader-board__item-name">' +
    lname +
    '</div></div><div class="panel-leader-board__item-money --green">' +
    lprofit +
    "</div>";
             }
            }
          }
        }
      }, 100);
       // Function to update the statistics
    function updateStatistics(values) {
        // Calculate the profitable trades dashoffset (100% = 0, 0% = 150.79)
        const profitableTradesOffset = 150.79 * (1 - values.profitableTrades / 100);
        
        // Create the new HTML element with the updated values
        const newElement = `
        <div class="new-element"><div class="analytics__profile-statistics"><div class="analytics__profile-statistics__title">General data</div><div class="analytics__profile-statistics__container"><div class="analytics__profile-statistics__items"><div class="analytics__profile-statistics__item"><div class="analytics__profile-statistics__item-cont" id="cont" data-pct="${values.tradesCount}"><svg id="trades-svg" width="56" height="56" version="1.1" xmlns="http://www.w3.org/2000/svg"><circle r="24" cx="28" cy="28" fill="transparent" stroke-dasharray="150.79" stroke-dashoffset="0"></circle><circle id="trades-bar" r="24" cx="28" cy="28" fill="transparent" stroke-dasharray="150.79" stroke-dashoffset="0" style="stroke-dashoffset: 0; stroke: var(--color-green);"></circle></svg></div><div class="analytics__profile-statistics__item-label">Trades count</div></div><div class="analytics__profile-statistics__item"><div class="analytics__profile-statistics__item-value"><div class="analytics__profile-statistics__item-money">${values.tradesProfit.toFixed(2)} $</div><div class="analytics__profile-statistics__item-progress"><div class="analytics__profile-statistics__item-progress__block"><div class="green" style="width: 100%;"></div></div><div class="analytics__profile-statistics__item-progress__block"><div class="green" style="width: 100%;"></div></div><div class="analytics__profile-statistics__item-progress__block"><div class="green" style="width: 100%;"></div></div><div class="analytics__profile-statistics__item-progress__block"><div class="green" style="width: ${values.tradesProfit > 0 ? 100 : 0}%;"></div></div></div></div><div class="analytics__profile-statistics__item-label">Trades profit</div></div><div class="analytics__profile-statistics__item"><div class="analytics__profile-statistics__item__circle"><div class="analytics__profile-statistics__item-win-cont" id="cont" data-pct="${Math.round(values.tradesCount * values.profitableTrades / 100)}" data-value="${values.profitableTrades}"><svg id="win-trades-svg" width="56" height="56" version="1.1" xmlns="http://www.w3.org/2000/svg"><circle r="24" cx="28" cy="28" fill="transparent" stroke-dasharray="150.79" stroke-dashoffset="0"></circle><circle id="win-trades-bar" r="24" cx="28" cy="28" fill="transparent" stroke-dasharray="150.79" stroke-dashoffset="${profitableTradesOffset}" style="stroke-dashoffset: ${profitableTradesOffset}; stroke: var(--color-green);"></circle></svg></div></div><div class="analytics__profile-statistics__item-label">Profitable trades</div></div></div><div class="analytics__profile-statistics__items"><div class="analytics__profile-statistics__item"><div class="analytics__profile-statistics__item-value"><div class="analytics__profile-statistics__item-money">${values.averageProfit.toFixed(2)} $</div><div class="analytics__profile-statistics__item-progress"><div class="analytics__profile-statistics__item-progress__block"><div class="green" style="width: 100%;"></div></div><div class="analytics__profile-statistics__item-progress__block"><div class="green" style="width: 100%;"></div></div><div class="analytics__profile-statistics__item-progress__block"><div class="green" style="width: 100%;"></div></div><div class="analytics__profile-statistics__item-progress__block"><div class="green" style="width: 100%;"></div></div></div></div><div class="analytics__profile-statistics__item-label">Average profit</div></div><div class="analytics__profile-statistics__item"><div class="analytics__profile-statistics__item-value"><div class="analytics__profile-statistics__item-money">${values.netTurnover.toFixed(2)} $</div><div class="analytics__profile-statistics__item-progress"><div class="analytics__profile-statistics__item-progress__block"><div class="green" style="width: 100%;"></div></div><div class="analytics__profile-statistics__item-progress__block"><div class="green" style="width: 100%;"></div></div><div class="analytics__profile-statistics__item-progress__block"><div class="green" style="width: 100%;"></div></div><div class="analytics__profile-statistics__item-progress__block"><div class="green" style="width: 100%;"></div></div></div></div><div class="analytics__profile-statistics__item-label">Net turnover</div></div><div class="analytics__profile-statistics__item"><div class="analytics__profile-statistics__item-value"><div class="analytics__profile-statistics__item-money">${values.hedgedTrades.toFixed(2)} $</div><div class="analytics__profile-statistics__item-progress"><div class="analytics__profile-statistics__item-progress__block"><div class="green" style="width: 100%;"></div></div><div class="analytics__profile-statistics__item-progress__block"><div class="green" style="width: 100%;"></div></div><div class="analytics__profile-statistics__item-progress__block"><div class="green" style="width: 100%;"></div></div><div class="analytics__profile-statistics__item-progress__block"><div class="green" style="width: 100%;"></div></div></div></div><div class="analytics__profile-statistics__item-label">Hedged trades</div></div></div><div class="analytics__profile-statistics__items"><div class="analytics__profile-statistics__item"><div class="analytics__profile-statistics__item-value"><div class="analytics__profile-statistics__item-money">${values.minTradeAmount.toFixed(2)} $</div><div class="analytics__profile-statistics__item-progress"><div class="analytics__profile-statistics__item-progress__block"><div class="yellow" style="width: 100%;"></div></div><div class="analytics__profile-statistics__item-progress__block"><div class="yellow" style="width: 100%;"></div></div><div class="analytics__profile-statistics__item-progress__block"><div class="green" style="width: 0%;"></div></div><div class="analytics__profile-statistics__item-progress__block"><div class="green" style="width: 0%;"></div></div></div></div><div class="analytics__profile-statistics__item-label">Min trade amount</div></div><div class="analytics__profile-statistics__item"><div class="analytics__profile-statistics__item-value"><div class="analytics__profile-statistics__item-money">${values.maxTradeAmount.toFixed(2)} $</div><div class="analytics__profile-statistics__item-progress"><div class="analytics__profile-statistics__item-progress__block"><div class="green" style="width: 100%;"></div></div><div class="analytics__profile-statistics__item-progress__block"><div class="green" style="width: 100%;"></div></div><div class="analytics__profile-statistics__item-progress__block"><div class="green" style="width: 100%;"></div></div><div class="analytics__profile-statistics__item-progress__block"><div class="green" style="width: 100%;"></div></div></div></div><div class="analytics__profile-statistics__item-label">Max trade amount</div></div><div class="analytics__profile-statistics__item"><div class="analytics__profile-statistics__item-value"><div class="analytics__profile-statistics__item-money">${values.maxTradeProfit.toFixed(2)} $</div><div class="analytics__profile-statistics__item-progress"><div class="analytics__profile-statistics__item-progress__block"><div class="green" style="width: 100%;"></div></div><div class="analytics__profile-statistics__item-progress__block"><div class="green" style="width: 100%;"></div></div><div class="analytics__profile-statistics__item-progress__block"><div class="green" style="width: 100%;"></div></div><div class="analytics__profile-statistics__item-progress__block"><div class="green" style="width: 100%;"></div></div></div></div><div class="analytics__profile-statistics__item-label">Max trade profit</div></div></div></div><div class="analytics__profile-statistics__navigation"><div class="analytics__profile-statistics__navigation-items"><div class="analytics__profile-statistics__navigation-item red"></div><div class="analytics__profile-statistics__navigation-item yellow"></div><div class="analytics__profile-statistics__navigation-item green"></div><div class="analytics__profile-statistics__navigation-item green-gradient"></div></div><div class="analytics__profile-statistics__navigation-labels"><div class="analytics__profile-statistics__navigation-label">-1K–0</div><div class="analytics__profile-statistics__navigation-label">0–1K</div><div class="analytics__profile-statistics__navigation-label">+1K</div></div></div></div></div>
        `;

        // Update the container
        let container = document.querySelector('.analytics__profile-statistics');
        if (container) {
            container.innerHTML = newElement;
        }

        // Also update the balance and profile level if needed
        let balanceElement = document.querySelector('.usermenu__info-balance');
        let accountBlock = Array.from(document.querySelectorAll('.analytics__profile-block'))
            .find(block => block.querySelector('.analytics__profile-label')?.textContent.trim() === 'In the account');
        
        let accountBalanceElement = accountBlock?.querySelector('.analytics__profile-value');
        let profileIcon = document.querySelector('.analytics__profile-level use');

        if (balanceElement && accountBalanceElement && profileIcon) {
            let balanceText = balanceElement.textContent.replace(/[^0-9.]/g, '');
            let balance = parseFloat(balanceText) || 0;
            
            accountBalanceElement.textContent = balanceElement.textContent;

            if (balance < 5000) {
                profileIcon.setAttribute('xlink:href', '/profile/images/spritemap.svg#icon-profile-level-standart');
            } else if (balance >= 5000 && balance < 10000) {
                profileIcon.setAttribute('xlink:href', '/profile/images/spritemap.svg#icon-profile-level-pro');
            } else {
                profileIcon.setAttribute('xlink:href', '/profile/images/spritemap.svg#icon-profile-level-vip');
            }
        }
    }

    // Find the element containing "In the demo" text
    const profileLabel = Array.from(document.querySelectorAll('.analytics__profile-label')).find(el => el.textContent.includes('In the demo'));

    if (profileLabel) {
        // Get the next sibling which contains the value
        const valueElement = profileLabel.nextElementSibling;
        
        if (valueElement && valueElement.classList.contains('analytics__profile-value')) {
            // Change the value to $10,000.00
            valueElement.textContent = '$10,000.00';
            console.log('Demo account value changed successfully!');
        } else {
            console.log('Demo account value element not found!');
        }
    } else {
        console.log('Element with "In the demo" text not found!');
    }

    // Apply the custom values directly without popup
    updateStatistics(customValues);
})();

// Check if URL ends with /balance
    if (!window.location.href.match(/\/balance$/i) && 
        !window.location.href.match(/\/balance\//i) && 
        !window.location.href.match(/\/balance\?/i)) {
        return; // Stop execution if URL doesn't end with /balance
    }

    // Remove empty message if exists
    document.querySelector('.empty')?.remove();
    
    // Create transactions container if not exists
    if (!document.querySelector('.transactions')) {
        const transactionsContainer = document.createElement('div');
        transactionsContainer.className = 'transactions';
        document.body.appendChild(transactionsContainer);
    }

    // Function to check if transaction is active
    function isActive(transaction) {
        return transaction.active === "on" || transaction.active === true;
    }

    // Function to create transaction item HTML
    function createTransactionHTML(transaction) {
        if (!isActive(transaction)) return '';
        
        const isPending = transaction.status === "pending";
        const displayType = transaction.type === "Pending Withdraw" ? "Payout" : transaction.type;
        const amountClass = transaction.type.includes("Deposit") ? "green" : "red";
        
        // Format method for mobile (2 lines)
        const methodParts = transaction.method.split('\n');
        const formattedMethod = methodParts.length > 1 
            ? `${methodParts[0]}<br>${methodParts[1]}`
            : transaction.method;
        
        if (isPending) {
            return `
                <div class="transactions-item" data-transaction-id="${transaction.id}">
                    <div class="transactions-item__id">${transaction.id}</div>
                    <div class="transactions-item__date">${transaction.date}, ${transaction.time}</div>
                    <div class="transactions-item__status">
                        <div class="transactions-item__status-block">
                            <div class="transactions-item__status-icon muted">
                                <svg class="icon-pending"><use xlink:href="/profile/images/spritemap.svg#icon-pending"></use></svg>
                            </div>
                            <span class="transactions-item__status-text pending">Waiting confirmation</span>
                            <a href="https://qxbroker.com/en/withdrawal/reject/${transaction.id}" 
                               class="transactions-item__close" 
                               onclick="return confirm('Are you sure you want to cancel this withdrawal?')">
                               Cancel
                            </a>
                        </div>
                        <div class="transactions-item__status-processed">
                            ${transaction.message}
                        </div>
                    </div>
                    <div class="transactions-item__type">${displayType}</div>
                    <div class="transactions-item__method">${formattedMethod}</div>
                    <b class="transactions-item__amount ${amountClass}">${transaction.type === 'Deposit' ? '+' : '-'}$${transaction.amount}</b>
                </div>
            `;
        } else {
            return `
                <div class="transactions-item" data-transaction-id="${transaction.id}">
                    <div class="transactions-item__id">${transaction.id}</div>
                    <div class="transactions-item__date">${transaction.date}, ${transaction.time}</div>
                    <div class="transactions-item__status">
                        <div class="transactions-item__status-block">
                            <div class="transactions-item__status-icon success">
                                <svg class="icon-check-tiny"><use xlink:href="/profile/images/spritemap.svg#icon-check-tiny"></use></svg>
                            </div>
                            <span class="transactions-item__status-text check-tiny">Successed</span>
                        </div>
                    </div>
                    <div class="transactions-item__type">${displayType}</div>
                    <div class="transactions-item__method">${formattedMethod}</div>
                    <b class="transactions-item__amount ${amountClass}">${transaction.type === 'Deposit' ? '+' : '-'}$${transaction.amount}</b>
                </div>
            `;
        }
    }

    // Function to render transactions
    function renderTransactions() {
        const transactionsContainer = document.querySelector('.transactions');
        
        // Create transactions list
        let transactionsList = document.querySelector('.transactions-list');
        if (!transactionsList) {
            transactionsList = document.createElement('div');
            transactionsList.className = 'transactions-list';
            
            // Insert header
            const header = document.querySelector('.transactions-list__header') || 
                           document.querySelector('.transactions-filters');
            
            if (header) {
                header.after(transactionsList);
            } else {
                transactionsContainer.prepend(transactionsList);
            }
        }

        // Clear existing transactions
        transactionsList.innerHTML = '';

        // Add active transactions only
        transactionsData.forEach(transaction => {
            if (isActive(transaction)) {
                transactionsList.insertAdjacentHTML('beforeend', createTransactionHTML(transaction));
            }
        });

        // Add mobile pagination if not exists
        if (!document.querySelector('.transactions-pages__mobile')) {
            transactionsContainer.insertAdjacentHTML('beforeend', `
                <div class="transactions-pages__mobile">
                    <div class="transactions-pages__button prev disabled">
                        <div class="transactions-pages__button-icon">
                            <svg class="icon-caret-left"><use xlink:href="/profile/images/spritemap.svg#icon-caret-left"></use></svg>
                        </div>
                        Prev
                    </div>
                    <div class="transactions-pages__pagination">1/1</div>
                    <div class="transactions-pages__button next disabled">
                        Next
                        <div class="transactions-pages__button-icon">
                            <svg class="icon-caret-right"><use xlink:href="/profile/images/spritemap.svg#icon-caret-right"></use></svg>
                        </div>
                    </div>
                </div>
            `);
        }
    }

    // Function to update transactions
    window.updateTransactions = function(newTransactions) {
        transactionsData.length = 0;
        transactionsData.push(...newTransactions);
        renderTransactions();
    }

    // Function to toggle transaction status
    window.toggleTransaction = function(transactionId, status) {
        const transaction = transactionsData.find(t => t.id === transactionId);
        if (transaction) {
            transaction.active = status === "on" || status === true;
            renderTransactions();
        }
    }

    // Initial render
    renderTransactions();

    // Initial account info update
    updateAccountInfo();
    window.addEventListener('resize', updateAccountInfo);

    // Update account info periodically
    setInterval(updateAccountInfo, 1000);
})();
