     // Change page title (always in English)
document.title = "Live trading | Quotex";

// Currency configuration with different thresholds and demo balances
const currencyConfig = {
  "USD": { 
    "symbol": "$", 
    "pro": 5000, 
    "vip": 10000,
    "demoBalance": "10,000.00"
  },
  "INR": { 
    "symbol": "₹", 
    "pro": 415000, 
    "vip": 830000,
    "demoBalance": "700,000.00"
  },
  "BDT": { 
    "symbol": "৳", 
    "pro": 550000, 
    "vip": 1100000,
    "demoBalance": "1,000,000.00"
  },
  "EUR": { 
    "symbol": "€", 
    "pro": 4700, 
    "vip": 9400,
    "demoBalance": "10,000.00"
  },
  "PKR": { 
    "symbol": "₨", 
    "pro": 1400000, 
    "vip": 2800000,
    "demoBalance": "2,800,000.00"
  },
  "GBP": { 
    "symbol": "£", 
    "pro": 4000, 
    "vip": 8000,
    "demoBalance": "10,000.00"
  },
  "BRL": { 
    "symbol": "R$", 
    "pro": 25000, 
    "vip": 50000,
    "demoBalance": "50,000.00"
  },
  "EGP": { 
    "symbol": "E£", 
    "pro": 155000, 
    "vip": 310000,
    "demoBalance": "200,000.00"
  },
  "TRY": { 
    "symbol": "₺", 
    "pro": 160000, 
    "vip": 320000,
    "demoBalance": "300,000.00"
  }
};

// Detect language from URL
const lang = window.location.pathname.split('/')[1];
const isArabic = lang === 'ar';
const isBengali = lang === 'bn';
const isPortuguese = lang === 'pt';


// Update account type text based on device
function updateTextForDevice() {
  const liveElement = document.getElementsByClassName("usermenu__info-name")[0];
  if (liveElement) {
    if (window.innerWidth <= 768) {
      liveElement.innerHTML = isArabic ? "مباشر" : 
                            isBengali ? "সরাসরি" : 
                            isPortuguese ? "Viver" :
                            "LIVE";
    } else {
      liveElement.innerHTML = isArabic ? "حساب حقيقي" : 
                             isBengali ? "লাইভ অ্যাকাউন্ট" : 
                             isPortuguese ? "Conta real" :
                             "LIVE ACCOUNT";
    }
    liveElement.style.color = "#0faf59";
  }
}

updateTextForDevice();
window.addEventListener("resize", updateTextForDevice);

// Update mobile account text
const mobileLiveElement = document.getElementsByClassName("usermenu-mobile__info-name")[0];
if (mobileLiveElement) {
  mobileLiveElement.innerHTML = isArabic ? "مباشر" : 
                               isBengali ? "সরাসরি" : 
                               isPortuguese ? "Viver" :
                               "LIVE";
  mobileLiveElement.style.color = "#0faf59";
}

// Fixed currency detection function
function detectCurrency(balanceText) {
  const currencyPart = balanceText.replace(/[0-9.,]/g, '').trim();
  
  // Check for multi-character symbols first
  for (const [code, config] of Object.entries(currencyConfig)) {
    if (currencyPart.startsWith(config.symbol)) {
      return { code, ...config };
    }
  }
  
  return { code: "USD", ...currencyConfig.USD };
}

// Main function to update account levels and icons
function updateAccountLevel() {
  const balanceElement = document.getElementsByClassName("usermenu__info-balance")[0];
  if (!balanceElement) return;

  const balanceText = balanceElement.innerHTML;
  const { symbol, pro, vip, demoBalance } = detectCurrency(balanceText);
  const amount = parseFloat(balanceText.replace(/[^0-9.]/g, ''));
  
  let levelData = {};
  
  if (amount < pro) {
    levelData = {
      profit: isArabic ? '+0% ربح' : 
              isBengali ? '+0% লাভ' : 
              isPortuguese ? '+0% de lucro' :
              '+0% profit',
      name: isArabic ? "قياسي" : 
            isBengali ? "স্ট্যান্ডার্ড" : 
            isPortuguese ? "Padrão" :
            "STANDARD",
      iconClass: 'standart'
    };
  } else if (amount < vip) {
    levelData = {
      profit: isArabic ? '+2% ربح' : 
              isBengali ? '+2% লাভ' : 
              isPortuguese ? '+2% de lucro' :
              '+2% profit',
      name: isArabic ? "محترف" : 
            isBengali ? "প্রো" : 
            isPortuguese ? "Pró" :
            "PRO",
      iconClass: 'pro'
    };
  } else {
    levelData = {
      profit: isArabic ? '+4% ربح' : 
              isBengali ? '+4% লাভ' : 
              isPortuguese ? '+4% de lucro' :
              '+4% profit',
      name: isArabic ? "كبار الشخصيات" : 
            isBengali ? "ভিআইপি" : 
            isPortuguese ? "VIP" :
            "VIP",
      iconClass: 'vip'
    };
  }

  // Update icons
  const iconHTML = `<svg class="icon-profile-level-${levelData.iconClass}">
                   <use xlink:href="/profile/images/spritemap.svg#icon-profile-level-${levelData.iconClass}"></use>
                   </svg>`;
  
  const mobileLevels = document.getElementsByClassName("usermenu-mobile__info-levels")[0];
  const desktopLevels = document.getElementsByClassName("usermenu__info-levels")[0];
  
  if (mobileLevels) mobileLevels.innerHTML = iconHTML;
  if (desktopLevels) desktopLevels.innerHTML = iconHTML;

  // Update dropdown menu if exists
  const menu = document.getElementsByClassName("usermenu__dropdown")[0];
  if (menu) {
    const levelIcon = document.getElementsByClassName("usermenu__level-icon")[0];
    const levelName = document.getElementsByClassName("usermenu__level-name")[0];
    const levelProfit = document.getElementsByClassName("usermenu__level-profit")[0];
    
    if (levelIcon) levelIcon.innerHTML = iconHTML;
    if (levelName) levelName.innerHTML = levelData.name;
    if (levelProfit) levelProfit.innerHTML = levelData.profit;
    
    const realBalance = document.getElementsByClassName("usermenu__select-balance")[0];
    const demoBalanceElement = document.getElementsByClassName("usermenu__select-balance")[1];
    
    if (realBalance) realBalance.innerHTML = balanceText;
    if (demoBalanceElement) demoBalanceElement.innerHTML = `${symbol}${demoBalance}`;

    // Set active account
    const realAccount = document.querySelector(".usermenu__select-item--radio");
    const demoAccount = document.querySelectorAll(".usermenu__select-item--radio")[1];
    
    if (realAccount && demoAccount) {
      realAccount.classList.add("active");
      demoAccount.classList.remove("active");
    }
  }
}

// Run updates periodically
setInterval(updateAccountLevel, 100);
